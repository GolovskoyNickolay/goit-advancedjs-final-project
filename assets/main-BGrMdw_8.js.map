{"version":3,"mappings":"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","names":["Filter","isIndexPage","exerciseInstance","paginationInstance","__publicField","target","searchQueryParams","index","li","findClosestParrent","exercise","isMobile","instance","module","__vitePreload","filter","item","page","data","getFilters","_a","imgURL","name","capitalizeFirstLetter","INVISIABLE_CLASS","text","RatingModal","modalBody","backToExercise","value","ratingInputs","ratingValue","input","exerciseId","event","form","formData","rate","email","review","iziToast","res","updateExerciseRating","error","ExerciseModal","card","id","getExerciseById","isFavouritesExercise","favoritesBtn","rateBtn","button","removeFavouritesFromStorage","addFavouritesToStorage","rating","ex","initMainSection","pagination","modalInstance","Exercise","filterInstance","category","keyword"],"ignoreList":[],"sources":["../../src/js/main-section/filter.js","../../src/js/modal/raiting-modal.js","../../src/js/modal/exercise-modal.js","../../src/js/main-section/main-section.js"],"sourcesContent":["import { getFilters } from '../../services/apiServices';\nimport { capitalizeFirstLetter, findClosestParrent, isMobile } from '../utils';\nimport { INVISIABLE_CLASS } from './constants';\nimport searchQueryParams from './searchParams.js';\n\nclass Filter {\n  constructor(isIndexPage, exerciseInstance, paginationInstance) {\n    this.exerciseInstance = exerciseInstance;\n    this.paginationInstance = paginationInstance;\n    this.filterList = document.body.querySelector('.filters-list');\n    this.filterList.addEventListener('click', this.onClick);\n    this.items = Array.from(this.filterList.querySelectorAll('li'));\n\n    this.categoryList = document.body.querySelector('.category-list');\n    this.categoryList.addEventListener('click', this.cardOnClick);\n    this.filter = 'Muscles';\n\n    this.path = {\n      start: document.querySelector('.filter-path-start'),\n      part: document.querySelector('.filter-path-part'),\n    };\n\n    this.limit = isMobile() ? 9 : 12;\n\n    this.errorElement = document.body.querySelector('[data-categoryError]');\n\n    if (!isIndexPage) return;\n\n    (async function (instance) {\n      const module = await import('./search.js');\n      instance.searchForm = module.default;\n    })(this);\n  }\n\n  onClick = ({ target }) => {\n    if (target.nodeName !== 'LI') return;\n\n    this.filter = target.dataset.filter;\n    this.setActiveFilter(this.filter);\n\n    this.exerciseInstance.hide();\n    this.render();\n\n    this.setActivePath();\n    searchQueryParams.new('category', this.filter);\n  };\n\n  setActiveFilter(filter) {\n    this.items.forEach(item => {\n      if (item.dataset.filter === filter) item.classList.add('active');\n      else item.classList.remove('active');\n    });\n  }\n\n  setActivePath(exercise = '') {\n    if (exercise) this.path.start.innerHTML = 'Exercises /';\n    else this.path.start.innerHTML = 'Exercises';\n\n    this.path.part.innerHTML = exercise;\n  }\n\n  async render(page = 1) {\n    try {\n      const data = await getFilters({\n        filter: this.filter,\n        limit: this.limit,\n        page,\n      });\n\n      if (data.results.length) {\n        this.errorHide();\n        this.categoryList.innerHTML = data.results\n          .map(Filter.categoryMarkup)\n          .join('');\n      } else {\n        this.categoryList.innerHTML = '';\n        this.errorShow();\n      }\n\n      this.paginationInstance.render(data.totalPages, data.page);\n      this.paginationInstance.callback = this.paginationCategoryCallback;\n\n      this.searchForm?.hide();\n\n      this.show();\n    } catch (error) {\n      iziToast.error({\n        title: 'Unexpected error',\n        message: 'Try to refresh the page',\n        position: 'topRight',\n      });\n    }\n  }\n\n  static categoryMarkup({ imgURL, name, filter }) {\n    return `<li class=\"category-card\" data-muscle=\"${filter}\" data-exercise=\"${name}\">\n          <img\n            src=\"${imgURL}\"\n            alt=\"Image shows exercise ${name}\"\n            class=\"category-card-image\"\n          />\n          <div class=\"category-content\">\n            <h3 class=\"category-title\">${capitalizeFirstLetter(name)}</h3>\n            <p class=\"category-subtitle\">${filter}</p>\n          </div>\n        </li>`;\n  }\n\n  paginationCategoryCallback = index => {\n    this.render(Number(index));\n  };\n\n  cardOnClick = ({ target }) => {\n    const li = findClosestParrent(target, 'LI', 'UL');\n    if (!li) return;\n    this.hide();\n    const { exercise } = li.dataset;\n    this.exerciseInstance.init(this.filter, exercise);\n\n    this.setActivePath(exercise);\n\n    searchQueryParams.set('exercise', exercise);\n  };\n\n  show() {\n    this.categoryList.classList.remove(INVISIABLE_CLASS);\n    this.categoryList.hidden = false;\n  }\n  hide() {\n    this.categoryList.classList.add(INVISIABLE_CLASS);\n    this.categoryList.hidden = true;\n    this.errorHide();\n  }\n\n  errorShow(text = 'Category was not found') {\n    this.errorElement.innerHTML = text;\n    this.errorElement.classList.remove(INVISIABLE_CLASS);\n    this.errorElement.hidden = false;\n  }\n\n  errorHide() {\n    this.errorElement.innerHTML = '';\n    this.errorElement.classList.add(INVISIABLE_CLASS);\n    this.errorElement.hidden = true;\n  }\n}\n\nexport default Filter;\n","import iziToast from 'izitoast';\nimport { updateExerciseRating } from '../../services/apiServices.js';\n\nexport class RatingModal {\n  constructor(modalBody, backToExercise) {\n    this.modalBody = modalBody;\n    this.exerciseId = null;\n    this.backToExercise = backToExercise;\n  }\n\n  setupStarsUpdate() {\n    const ratingInputs = this.modalBody.querySelectorAll(\n      'input[name=\"rating\"]'\n    );\n    const ratingValue = this.modalBody.querySelector('.rating-options-value');\n\n    ratingInputs.forEach(input => {\n      input.addEventListener('change', () => {\n        ratingValue.textContent = `${parseFloat(input.value).toFixed(1)}`;\n      });\n    });\n  }\n\n  createRatingStars = () => {\n    return `\n      <div class=\"rating-options-wrapper\">\n        <span class=\"rating-options-value\">0.0</span>\n        <div class=\"rating-options\">\n          ${[5, 4, 3, 2, 1]\n            .map(\n              value => `\n            <input type=\"radio\" id=\"star${value}\" name=\"rating\" value=\"${value}\" />\n            <label for=\"star${value}\" class=\"rating-label\">\n              <svg class=\"rating-star\" width=\"24\" height=\"24\">\n                <use href=\"./img/icons.svg#icon-Star\"></use>\n              </svg>\n            </label>\n          `\n            )\n            .join('')}\n        </div>\n      </div>\n  `;\n  };\n\n  open(exerciseId) {\n    this.exerciseId = exerciseId;\n\n    this.modalBody.innerHTML = `\n      <div class=\"rating-modal\">\n        <span class=\"rating-modal-title\">Rating</span>\n        \n        <form class=\"rating-form\">\n          ${this.createRatingStars()}\n          \n          <input\n            type=\"email\" \n            name=\"email\" \n            class=\"rating-input rating-input-email\"\n            required \n            placeholder=\"Email\"\n          />\n\n          <textarea\n            class=\"rating-input rating-input-comment\"\n            name=\"comment\" \n            required\n            placeholder=\"Your comment\"></textarea>\n\n          <button class=\"rating-submit-btn primary-btn\" type=\"submit\">Send</button>\n        </form>\n      </div>\n    `;\n\n    const form = this.modalBody.querySelector('.rating-form');\n    form.addEventListener('submit', event => this.handleSubmit(event));\n\n    this.setupStarsUpdate();\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const formData = new FormData(form);\n\n    const rate = formData.get('rating');\n    const email = formData.get('email');\n    const review = formData.get('comment');\n\n    if (!rate || !email || !review) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please fill in all fields!',\n        position: 'topRight',\n      });\n      return;\n    }\n\n    const data = {\n      rate: Number(rate),\n      email,\n      review,\n    };\n\n    try {\n      const res = await updateExerciseRating(this.exerciseId, data);\n      console.log(res);\n      iziToast.success({\n        title: 'Update rating',\n        message: 'Update was successfully!',\n        position: 'topRight',\n      });\n\n      this.close();\n    } catch (error) {\n      iziToast.error({\n        title: 'Update Error',\n        message: error.message,\n        position: 'topRight',\n      });\n    }\n  }\n\n  close() {\n    this.modalBody.innerHTML = '';\n    this.exerciseId = null;\n    this.backToExercise();\n  }\n}\n","import { getExerciseById } from '../../services/apiServices.js';\nimport {\n  addFavouritesToStorage,\n  isFavouritesExercise,\n  removeFavouritesFromStorage,\n} from '../favourites.js';\nimport iziToast from 'izitoast';\nimport { RatingModal } from './raiting-modal.js';\n\nexport class ExerciseModal {\n  constructor() {\n    this.modalOverlay = document.querySelector('.modal-overlay');\n    this.modal = document.getElementById('exerciseModal');\n    this.modalBody = document.querySelector('.modal-body');\n    this.closeBtn = this.modal.querySelector('.modal-close');\n\n    this.ratingModal = new RatingModal(this.modalBody, this.render.bind(this));\n\n    this.exercise = null;\n    this.isFavorite = false;\n    this.isRatingOpen = false;\n\n    this.handleOverlayClick = this.handleOverlayClick.bind(this);\n    this.handleEscKey = this.handleEscKey.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  async open(event) {\n    const card = event.target.closest('.workout-card');\n    if (!card) return;\n\n    const id = card.dataset.id;\n\n    this.modalOverlay.classList.add('is-open');\n    this.modalBody.innerHTML = this.createSkeletonMarkup();\n\n    try {\n      this.exercise = await getExerciseById(id);\n      this.isFavorite = isFavouritesExercise(this.exercise._id);\n\n      this.render();\n\n      this.modalOverlay.addEventListener('click', this.handleOverlayClick);\n      window.addEventListener('keydown', this.handleEscKey);\n      this.closeBtn.addEventListener('click', this.handleClose);\n    } catch (error) {\n      iziToast.error({\n        title: 'Request exercise Error',\n        message: error?.message,\n        position: 'topRight',\n      });\n\n      console.error(error);\n      this.modalBody.innerHTML =\n        '<p class=\"error\">Failed to load exercise. Try again later.</p>';\n    }\n  }\n\n  close() {\n    this.modalOverlay.classList.remove('is-open');\n    this.exercise = null;\n    this.isFavorite = false;\n    this.isRatingOpen = false;\n\n    this.modalOverlay.removeEventListener('click', this.handleOverlayClick);\n    this.closeBtn.removeEventListener('click', this.handleClose);\n    window.removeEventListener('keydown', this.handleEscKey);\n  }\n\n  render() {\n    this.modalBody.innerHTML = this.createExerciseMarkup();\n    this.addEventListeners();\n  }\n\n  addEventListeners() {\n    const favoritesBtn = this.modal.querySelector('.favorites-btn');\n    const rateBtn = this.modal.querySelector('.rate-btn');\n\n    favoritesBtn.addEventListener('click', () =>\n      this.toggleFavorite(favoritesBtn)\n    );\n    rateBtn.addEventListener('click', () => {\n      this.ratingModal.open(this.exercise._id);\n      this.isRatingOpen = true;\n    });\n  }\n\n  toggleFavorite(button) {\n    if (this.isFavorite) {\n      removeFavouritesFromStorage(this.exercise._id);\n      this.isFavorite = false;\n    } else {\n      addFavouritesToStorage(this.exercise);\n      this.isFavorite = true;\n    }\n    this.updateFavoritesButton(button);\n  }\n\n  updateFavoritesButton(button) {\n    button.innerHTML = `\n      <span class=\"favorites-btn-text\">\n        ${this.isFavorite ? 'Remove from favorites' : 'Add to favorites'}\n      </span>\n      <svg class=\"icon-heart\" height=\"18\" width=\"20\">\n        <use href=\"./img/icons.svg#${\n          this.isFavorite ? 'icon-trash' : 'icon-heart'\n        }\"></use>\n      </svg>\n    `;\n  }\n\n  createStars(rating) {\n    const fillPercent = (rating / 5) * 100;\n\n    return `\n    <div class=\"rating\" style=\"--fill: ${fillPercent}%;\">\n      <div class=\"rating-bg\">\n        ${[...Array(5)]\n          .map(\n            () => `\n          <svg class=\"star\" width=\"18\" height=\"18\">\n            <use href=\"./img/icons.svg#icon-Star\"></use>\n          </svg>\n        `\n          )\n          .join('')}\n      </div>\n      <div class=\"rating-fill\">\n        ${[...Array(5)]\n          .map(\n            () => `\n          <svg class=\"star\" width=\"18\" height=\"18\">\n            <use href=\"./img/icons.svg#icon-Star\"></use>\n          </svg>\n        `\n          )\n          .join('')}\n      </div>\n    </div>\n  `;\n  }\n\n  createExerciseMarkup() {\n    const ex = this.exercise;\n    return `\n      <div class=\"exercise-details\">\n        ${\n          ex.gifUrl\n            ? `<img src=\"${ex.gifUrl}\" alt=\"${ex.name}\" class=\"exercise-img\">`\n            : ''\n        }\n        <div class=\"exercise-content\">\n          <div>\n            <h2 class=\"exercise-title\">${ex.name}</h2>\n\n            <div class=\"exercise-rate\">\n              <p>${ex.rating}</p>\n              ${this.createStars(ex.rating)}\n            </div>\n\n            <ul class=\"exercise-info\">\n              <li>Target<span>${ex.target}</span></li>\n              <li>Body Part<span>${ex.bodyPart}</span></li>\n              <li>Equipment<span>${ex.equipment}</span></li>\n              <li>Popular<span>${ex.popularity}</span></li>\n              <li>Burned calories<span>${ex.burnedCalories}</span></li>\n            </ul>\n\n            <p class=\"exercise-description\">${ex.description}</p>\n          </div>\n\n          <div class=\"exercise-buttons\">\n            <button type=\"button\" class=\"favorites-btn primary-btn\" data-id=\"${\n              ex._id\n            }\">\n              <span class=\"favorites-btn-text\">\n                ${\n                  this.isFavorite ? 'Remove from favorites' : 'Add to favorites'\n                }\n              </span>\n              <svg class=\"icon-heart\" height=\"18\" width=\"20\">\n                <use href=\"./img/icons.svg#${\n                  this.isFavorite ? 'icon-trash' : 'icon-heart'\n                }\"></use>\n              </svg>\n            </button>\n            \n            <button type=\"button\" class=\"rate-btn\" data-id=\"${\n              ex._id\n            }\">Give a rating</button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  handleOverlayClick(event) {\n    if (event.target === this.modalOverlay) {\n      if (this.isRatingOpen) {\n        this.ratingModal.close();\n        this.isRatingOpen = false;\n      } else {\n        this.close();\n      }\n    }\n  }\n\n  handleEscKey(event) {\n    if (event.key === 'Escape') {\n      if (this.isRatingOpen) {\n        this.ratingModal.close();\n        this.isRatingOpen = false;\n      } else {\n        this.close();\n      }\n    }\n  }\n\n  handleClose(event) {\n    if (this.isRatingOpen) {\n      this.ratingModal.close();\n      this.isRatingOpen = false;\n    } else {\n      this.close();\n    }\n  }\n\n  createSkeletonMarkup() {\n    return `\n    <div class=\"exercise-details skeleton\">\n      <div class=\"exercise-img skeleton-img\"></div>\n      <div class=\"exercise-content\">\n        <div class=\"skeleton-title\"></div>\n        <div class=\"skeleton-rate\"></div>\n        <ul class=\"exercise-info\">\n          ${[...Array(5)]\n            .map(\n              () => `\n            <li class=\"skeleton-info-item\">\n              <div class=\"skeleton-line\"></div>\n            </li>\n          `\n            )\n            .join('')}\n        </ul>\n        <div class=\"skeleton-description\"></div>\n        <div class=\"exercise-buttons\">\n          <div class=\"skeleton-button\"></div>\n          <div class=\"skeleton-button\"></div>\n        </div>\n      </div>\n    </div>\n  `;\n  }\n}\n","import Exercise from './exercise';\nimport Filter from './filter';\nimport searchQueryParams from './searchParams.js';\nimport { ExerciseModal } from '../modal/exercise-modal.js';\n\nasync function initMainSection() {\n  const modulePagination = await import('./pagination.js');\n  const pagination = modulePagination.default;\n\n  const isIndexPage = true;\n  const modalInstance = new ExerciseModal();\n  const exerciseInstance = new Exercise(isIndexPage, pagination, modalInstance);\n  const filterInstance = new Filter(isIndexPage, exerciseInstance, pagination);\n\n  const { category, exercise, keyword, page } = Object.fromEntries(\n    searchQueryParams.initParams.entries()\n  );\n\n  if (category && exercise) {\n    setTimeout(() => {\n      exerciseInstance.init(category, exercise, keyword, page);\n      filterInstance.setActiveFilter(category);\n      filterInstance.setActivePath(exercise);\n    }, 50);\n  } else if (category) {\n    const index = ['Muscles', 'Body parts', 'Equipment'].indexOf(category);\n    filterInstance.onClick({\n      target: document.querySelectorAll('.filters-list .filters-item')[index],\n    });\n  } else {\n    filterInstance.onClick({\n      target: document.querySelector('.filters-list .filters-item'),\n    });\n  }\n\n  return;\n}\n\ninitMainSection();\n"],"file":"assets/main-BGrMdw_8.js"}