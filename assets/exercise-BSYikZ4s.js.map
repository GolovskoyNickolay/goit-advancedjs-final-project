{"version":3,"mappings":"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","names":["backdrop","event","header","body","lastScrollTop","scrollTimeoutId","onScroll","scrollTop","onWheel","api","axios","response","error","serverMessage","_a","iziToast","getExercises","params","data","getFilters","getQuoteOfTheDay","getQuote","today","storedQuote","storedAuthor","storedDate","quoteText","author","capitalizeFirstLetter","val","findClosestParrent","el","nodeNameFind","nodeNameStop","MOBILE","isMobile","INVISIABLE_CLASS","NAME_OF_STORAGE","TEXT_IF_EMPTY","FILTERS","Exercise","isIndexPage","paginationInstance","__publicField","index","keyword","instance","module","__vitePreload","filter","exercise","page","options","_id","rating","name","burnedCalories","time","bodyPart","target","isFavourite"],"ignoreList":[],"sources":["../../src/js/menu.js","../../src/js/header-sticky.js","../../src/api.js","../../src/services/apiServices.js","../../src/js/main-section/quote.js","../../src/js/utils.js","../../src/js/main-section/constants.js","../../src/js/main-section/exercise.js"],"sourcesContent":["const backdrop = document.getElementById('backdrop');\n\nwindow.openMenu = () => {\n  backdrop?.classList.add('is-open');\n};\n\nwindow.closeMenu = () => {\n  backdrop?.classList.remove('is-open');\n};\n\nwindow.menuLayoutClickHandler = (event) => {\n  event.stopPropagation();\n};\n","const header = document.querySelector('.router');\nconst body = document.body;\n\nlet lastScrollTop = 0;\nlet scrollTimeoutId;\n\nconst onScroll = () => {\n  if (!body.hasAttribute('data-user-scrolling')) {\n    return;\n  }\n\n  const scrollTop = document.documentElement.scrollTop;\n\n  header.classList.add('sticky');\n\n  if (scrollTop > 0) {\n    header.classList.toggle('hidden', scrollTop > lastScrollTop);\n  } else {\n    header.classList.remove('sticky');\n  }\n\n  lastScrollTop = scrollTop;\n};\n\nconst onWheel = () => {\n  body.setAttribute('data-user-scrolling', 'true');\n\n  clearTimeout(scrollTimeoutId);\n  scrollTimeoutId = setTimeout(() => {\n    body.removeAttribute('data-user-scrolling');\n  }, 100);\n};\n\nwindow.addEventListener('scroll', onScroll);\ndocument.addEventListener('wheel', onWheel);\n","import axios from 'axios';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst api = axios.create({\n  baseURL: 'https://your-energy.b.goit.study/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response && error.response.status === 409) {\n      const serverMessage = error.response.data?.message || 'Subscription already exists';\n\n      iziToast.error({\n        title: 'Subscription Error',\n        message: serverMessage,\n        position: 'topRight',\n      });\n\n      return { data: null };\n    } else {\n      console.error(error);\n      iziToast.error({\n        title: 'Request Error',\n        message: error?.message,\n        position: \"topRight\"\n      });\n\n      return { data: null };\n    }\n  }\n);\n\nexport default api;\n","import api from '../api.js';\n\n/**\n * @param {Object} params - The query parameters for the request.\n * @param {string} [params.bodypart] - The body part to filter by (e.g., \"back\", \"legs\").\n * @param {string} [params.equipment] - The equipment to filter by (e.g., \"dumbbell\", \"barbell\").\n * @param {number} [params.page=1] - The page number for pagination.\n * @param {number} [params.limit=10] - The number of items per page.\n * @returns {Promise<Object>} A promise that resolves with the list of exercises.\n */\nexport async function getExercises(params) {\n  const { data } = await api.get('/exercises', { params });\n  return data;\n}\n\n/**\n * @param {string|number} id - The identifier of the exercise.\n * @returns {Promise<Object>} A promise that resolves with the exercise details.\n */\nexport async function getExerciseById(id) {\n  const { data } = await api.get(`/exercises/${id}`);\n  return data;\n}\n\n/**\n * @param {string|number} id - The identifier of the exercise to update.\n * @param {Object} ratingData - The rating data object.\n * @param {number} ratingData.rating - The new rating value (e.g., a number from 1 to 5).\n * @returns {Promise<void>} A promise that resolves once the rating has been updated.\n */\nexport async function updateExerciseRating(id, ratingData) {\n  await api.patch(`/exercises/${id}/rating`, ratingData);\n}\n\n/**\n * @param {Object} [params={}] - The filter parameters for the request.\n * @param {string} [params.filter] - The type of filter (e.g., \"body parts\", \"muscles\", \"equipment\").\n * @param {number} [params.page=1] - The page number for pagination.\n * @param {number} [params.limit=12] - The number of items per page.\n * @returns {Promise<Object>} A promise that resolves with the filter data.\n */\nexport async function getFilters(params = {}) {\n  const { data } = await api.get('/filters', { params });\n  return data;\n}\n\n/**\n * @returns {Promise<Object>} A promise that resolves with the quote data.\n * The returned object may contain the following fields:\n * - `quote` {string} - The text of the quote.\n * - `author` {string} - The author of the quote.\n */\nexport async function getQuoteOfTheDay() {\n  const { data } = await api.get('/quote');\n  return data;\n}\n\n/**\n * @param {string} email - The email address of the user who wants to subscribe.\n * @returns {Promise<Object>} A promise that resolves with the server response.\n * The response object may include the following field:\n * - `message` {string} - A message indicating success or that the subscription already exists.\n */\nexport async function subscribe(email) {\n  const { data } = await api.post('/subscription', { email });\n  return data;\n}\n","import { getQuoteOfTheDay } from '../../services/apiServices';\n\nasync function getQuote() {\n  const today = new Date().toISOString().split('T')[0];\n\n  const storedQuote = localStorage.getItem('quote');\n  const storedAuthor = localStorage.getItem('author');\n  const storedDate = localStorage.getItem('quoteDate');\n\n  if (storedQuote && storedAuthor && storedDate === today) {\n    document.querySelector('.sidebar-quote').textContent = `${storedQuote}`;\n    document.querySelector('.sidebar-quote-author').textContent = `${storedAuthor}`;\n    return;\n  }\n\n  const data = await getQuoteOfTheDay();\n  const quoteText = data.quote;\n  const author = data.author;\n\n  document.querySelector('.sidebar-quote').textContent = `${quoteText}`;\n  document.querySelector('.sidebar-quote-author').textContent = `${author}`;\n\n  localStorage.setItem('quote', quoteText);\n  localStorage.setItem('author', author);\n  localStorage.setItem('quoteDate', today);\n}\n\ngetQuote();\n","/**\n *\n * @param {string} val\n * @returns string\n */\nexport function capitalizeFirstLetter(val) {\n  return String(val).charAt(0).toUpperCase() + String(val).slice(1);\n}\n\n/**\n *\n * @param {HTMLElement} el\n * @returns {HTMLElement | null}\n */\nexport function findClosestParrent(\n  el,\n  nodeNameFind = 'LI',\n  nodeNameStop = 'UL'\n) {\n  while (el.nodeName !== nodeNameFind && el.nodeName !== nodeNameStop) {\n    el = el.parentElement;\n  }\n\n  return el.nodeName === nodeNameFind ? el : null;\n}\n\nconst MOBILE = 768;\nconst TABLET = 1152;\n\nexport const isMobile = () => {\n  return window.innerWidth < MOBILE;\n};\n\nexport const isTablet = () => {\n  return !isMobile() && window.innerWidth < TABLET;\n};\n","export const INVISIABLE_CLASS = 'invisiable';\nexport const NAME_OF_STORAGE = 'favouritesExercises';\nexport const TEXT_IF_EMPTY = \"It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future.\";\nexport const INDEX_PATH = '/goit-advancedjs-final-project/';\n\nexport const FILTERS = {\n  Muscles: 'muscles',\n  'Body parts': 'bodypart',\n  Equipment: 'equipment',\n};\n","import { getExercises } from '../../services/apiServices';\nimport { isMobile } from '../utils';\nimport { INVISIABLE_CLASS, FILTERS, INDEX_PATH } from './constants';\n\nexport default class Exercise {\n  constructor(isIndexPage, paginationInstance) {\n    this.exerciseyList = document.body.querySelector('.exercise-list');\n    this.limit = isMobile() ? 8 : 10;\n    this.paginationInstance = paginationInstance;\n\n    if (!isIndexPage) return;\n    (async function (instance) {\n      const module = await import('./search.js');\n      instance.searchForm = module.default;\n    })(this);\n  }\n\n  init(filter, exercise) {\n    this.show();\n    this.filter = filter;\n    this.exercise = exercise;\n    this.keyword = '';\n    if (this.searchForm) {\n      this.searchForm.show();\n      this.searchForm.callback = this.searchCallback;\n    }\n    this.render();\n  }\n\n  async render(page = 1) {\n    try {\n      const options = {\n        [FILTERS[this.filter]]: this.exercise,\n        limit: this.limit,\n        page,\n      };\n\n      if (this.keyword) options.keyword = this.keyword;\n      const data = await getExercises(options);\n\n      this.page = page;\n      //   this.currentData = data;\n\n      this.exerciseyList.innerHTML = data.results\n        .map(el => Exercise.exerciseMarkup(el))\n        .join('');\n      this.paginationInstance.render(data.totalPages, data.page);\n      this.paginationInstance.callback = this.paginationExerciseCallback;\n      this.show();\n      // console.log(data);\n    } catch (error) {\n      // console.error(error);\n    }\n  }\n\n  static exerciseMarkup({\n    _id,\n    rating,\n    name,\n    burnedCalories,\n    time,\n    bodyPart,\n    target,\n  }, isFavourite = false) {\n    \n    \n    return `<li class=\"workout-card\" data-id=\"${_id}\">\n          <div class=\"workout-card-container\">\n            <div class=\"workout-header\">\n              <span class=\"workout-badge\">WORKOUT</span>\n              ${\n                isFavourite ?\n      `<button onclick=\"document.removeFavourite(this)\" class=\"workout-remove-btn\">\n                  <svg width=\"16\" height=\"16\" class=\"workout-remove-icon\">\n                    <use xlink:href=\"../img/icons.svg#icon-remove\"></use>\n                  </svg></button>`\n                : `<div class=\"workout-rating\">\n                    <span class=\"workout-rating-value\">${rating.toFixed(2)}</span>\n                    <svg width=\"18\" height=\"18\" class=\"workout-rating-icon\">\n                      <use xlink:href=\"../img/icons.svg#icon-Star\"></use>\n                    </svg>\n                  </div>`\n              }\n              <a href=\"#\" class=\"workout-start-btn\"\n                >Start\n                <svg width=\"16\" height=\"16\" class=\"workout-start-icon\">\n                  <use xlink:href=\"../img/icons.svg#icon-start\"></use>\n                </svg>\n              </a>\n            </div>\n            <div class=\"workout-body\">\n              <svg width=\"24\" height=\"24\" class=\"workout-icon\">\n                <use xlink:href=\"../img/icons.svg#icon-running\"></use>\n              </svg>\n              <h3 class=\"workout-title\">${name}</h3>\n            </div>\n            <ul class=\"workout-meta\">\n              <li class=\"workout-meta-item\">\n                <span class=\"workout-meta-name\">Burned calories:</span>\n                <span class=\"workout-meta-value\">${burnedCalories} / ${\n      time || '...'\n    }</span>\n              </li>\n              <li class=\"workout-meta-item\">\n                <span class=\"workout-meta-name\">Body part:</span>\n                <span class=\"workout-meta-value\">${bodyPart}</span>\n              </li>\n              <li class=\"workout-meta-item\">\n                <span class=\"workout-meta-name\">Target:</span>\n                <span class=\"workout-meta-value\">${target}</span>\n              </li>\n            </ul>\n          </div>\n        </li>`;\n  }\n\n  paginationExerciseCallback = index => {\n    this.render(index);\n  };\n\n  searchCallback = keyword => {\n    // if (keyword === this.keyword) return;\n    this.keyword = keyword || '';\n    this.render();\n  };\n\n  show() {\n    this.exerciseyList.classList.remove(INVISIABLE_CLASS);\n    this.exerciseyList.hidden = false;\n  }\n  hide() {\n    this.exerciseyList.classList.add(INVISIABLE_CLASS);\n    this.exerciseyList.hidden = true;\n  }\n}\n"],"file":"assets/exercise-BSYikZ4s.js"}