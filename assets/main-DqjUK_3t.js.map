{"version":3,"mappings":";u7BAAA,MAAMA,EAAW,SAAS,eAAe,UAAU,EAEnD,OAAO,SAAW,IAAM,CACtBA,GAAA,MAAAA,EAAU,UAAU,IAAI,UAC1B,EAEA,OAAO,UAAY,IAAM,CACvBA,GAAA,MAAAA,EAAU,UAAU,OAAO,UAC7B,EAEA,OAAO,uBAA0BC,GAAU,CACzCA,EAAM,gBAAe,CACvB,ECZA,MAAMC,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAO,SAAS,KAEtB,IAAIC,EAAgB,EAChBC,EAEJ,MAAMC,EAAW,IAAM,CACrB,GAAI,CAACH,EAAK,aAAa,qBAAqB,EAC1C,OAGF,MAAMI,EAAY,SAAS,gBAAgB,UAE3CL,EAAO,UAAU,IAAI,QAAQ,EAEzBK,EAAY,EACdL,EAAO,UAAU,OAAO,SAAUK,EAAYH,CAAa,EAE3DF,EAAO,UAAU,OAAO,QAAQ,EAGlCE,EAAgBG,CAClB,EAEMC,EAAU,IAAM,CACpBL,EAAK,aAAa,sBAAuB,MAAM,EAE/C,aAAaE,CAAe,EAC5BA,EAAkB,WAAW,IAAM,CACjCF,EAAK,gBAAgB,qBAAqB,CAC3C,EAAE,GAAG,CACR,EAEA,OAAO,iBAAiB,SAAUG,CAAQ,EAC1C,SAAS,iBAAiB,QAASE,CAAO,EC9B1C,MAAMC,EAAMC,EAAM,OAAO,CACvB,QAAS,uCACT,QAAS,CACP,eAAgB,kBACjB,CACH,CAAC,EAEDD,EAAI,aAAa,SAAS,IACvBE,GACQA,EAERC,GAAU,OACT,GAAIA,EAAM,UAAYA,EAAM,SAAS,SAAW,IAAK,CACnD,MAAMC,IAAgBC,EAAAF,EAAM,SAAS,OAAf,YAAAE,EAAqB,UAAW,8BAEtD,OAAAC,EAAS,MAAM,CACb,MAAO,qBACP,QAASF,EACT,SAAU,UAClB,CAAO,EAEM,CAAE,KAAM,KACrB,KACM,gBAAQ,MAAMD,CAAK,EACnBG,EAAS,MAAM,CACb,MAAO,gBACP,QAASH,GAAA,YAAAA,EAAO,QAChB,SAAU,UAClB,CAAO,EAEM,CAAE,KAAM,KAElB,CACH,EC3BO,eAAeI,EAAaC,EAAQ,CACzC,KAAM,CAAE,KAAAC,CAAM,EAAG,MAAMT,EAAI,IAAI,aAAc,CAAE,OAAAQ,CAAM,CAAE,EACvD,OAAOC,CACT,CA4BO,eAAeC,EAAWF,EAAS,GAAI,CAC5C,KAAM,CAAE,KAAAC,CAAM,EAAG,MAAMT,EAAI,IAAI,WAAY,CAAE,OAAAQ,CAAM,CAAE,EACrD,OAAOC,CACT,wgCCvCO,SAASE,EAAsBC,EAAK,CACzC,OAAO,OAAOA,CAAG,EAAE,OAAO,CAAC,EAAE,YAAa,EAAG,OAAOA,CAAG,EAAE,MAAM,CAAC,CAClE,CAOO,SAASC,EACdC,EACAC,EAAe,KACfC,EAAe,KACf,CACA,KAAOF,EAAG,WAAaC,GAAgBD,EAAG,WAAaE,GACrDF,EAAKA,EAAG,cAGV,OAAOA,EAAG,WAAaC,EAAeD,EAAK,IAC7C,CAEA,MAAMG,EAAS,IAGFC,EAAW,IACf,OAAO,WAAaD,EC9BhBE,EAAmB,aAGnBC,EAAU,CACrB,QAAS,UACT,aAAc,WACd,UAAW,WACb,ECHe,MAAMC,CAAS,CAC5B,YAAYC,EAAaC,EAAoB,CAkG7CC,EAAA,kCAA6BC,GAAS,CACpC,KAAK,OAAOA,CAAK,CACrB,GAEED,EAAA,sBAAiBE,GAAW,CAE1B,KAAK,QAAUA,GAAW,GAC1B,KAAK,OAAM,CACf,GAzGI,KAAK,cAAgB,SAAS,KAAK,cAAc,gBAAgB,EACjE,KAAK,MAAQR,IAAa,EAAI,GAC9B,KAAK,mBAAqBK,EAErBD,GACJ,eAAgBK,EAAU,CACzB,MAAMC,EAAS,MAAMC,EAAA,WAAO,sBAAa,8BACzCF,EAAS,WAAaC,EAAO,OAC9B,EAAE,IAAI,CACR,CAED,KAAKE,EAAQC,EAAU,CACrB,KAAK,KAAI,EACT,KAAK,OAASD,EACd,KAAK,SAAWC,EAChB,KAAK,QAAU,GACX,KAAK,aACP,KAAK,WAAW,OAChB,KAAK,WAAW,SAAW,KAAK,gBAElC,KAAK,OAAM,CACZ,CAED,MAAM,OAAOC,EAAO,EAAG,CACrB,GAAI,CACF,MAAMC,EAAU,CACd,CAACb,EAAQ,KAAK,MAAM,CAAC,EAAG,KAAK,SAC7B,MAAO,KAAK,MACZ,KAAAY,CACR,EAEU,KAAK,UAASC,EAAQ,QAAU,KAAK,SACzC,MAAMxB,EAAO,MAAMF,EAAa0B,CAAO,EAEvC,KAAK,KAAOD,EAGZ,KAAK,cAAc,UAAYvB,EAAK,QACjC,IAAIY,EAAS,cAAc,EAC3B,KAAK,EAAE,EACV,KAAK,mBAAmB,OAAOZ,EAAK,WAAYA,EAAK,IAAI,EACzD,KAAK,mBAAmB,SAAW,KAAK,2BACxC,KAAK,KAAI,CAEV,MAAe,CAEf,CACF,CAED,OAAO,eAAe,CACpB,IAAAyB,EACA,OAAAC,EACA,KAAAC,EACA,eAAAC,EACA,KAAAC,EACA,SAAAC,EACA,OAAAC,CACJ,EAAK,CACD,MAAO,qCAAqCN,CAAG;AAAA;AAAA;AAAA;AAAA,mDAIAC,EAAO,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAe1BC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,mDAKKC,CAAc,MAC3DC,GAAQ,KACT;AAAA;AAAA;AAAA,8DAGyDC,CAAQ;AAAA;AAAA;AAAA,2DAGXC,CAAM;AAAA;AAAA;AAAA;AAAA,cAK9D,CAYD,MAAO,CACL,KAAK,cAAc,UAAU,OAAOrB,CAAgB,EACpD,KAAK,cAAc,OAAS,EAC7B,CACD,MAAO,CACL,KAAK,cAAc,UAAU,IAAIA,CAAgB,EACjD,KAAK,cAAc,OAAS,EAC7B,CACH,CCrHA,MAAMsB,CAAO,CACX,YAAYnB,EAAaoB,EAAkBnB,EAAoB,CA0B/DC,EAAA,eAAU,CAAC,CAAE,OAAAgB,KAAa,CACpBA,EAAO,WAAa,OAExB,KAAK,MAAM,QAAQG,GAAQA,EAAK,UAAU,OAAO,QAAQ,CAAC,EAC1DH,EAAO,UAAU,IAAI,QAAQ,EAE7B,KAAK,OAASA,EAAO,QAAQ,OAE7B,KAAK,iBAAiB,OACtB,KAAK,OAAM,EAEX,KAAK,KAAK,MAAM,UAAY,YAC5B,KAAK,KAAK,KAAK,UAAY,GAC/B,GAwCEhB,EAAA,kCAA6BC,GAAS,CACpC,KAAK,OAAO,OAAOA,CAAK,CAAC,CAC7B,GAEED,EAAA,mBAAc,CAAC,CAAE,OAAAgB,KAAa,CAC5B,MAAMI,EAAK/B,EAAmB2B,EAAQ,KAAM,IAAI,EAC3CI,IACL,KAAK,KAAI,EACT,KAAK,iBAAiB,KAAK,KAAK,OAAQA,EAAG,QAAQ,QAAQ,EAE3D,KAAK,KAAK,MAAM,UAAY,cAC5B,KAAK,KAAK,KAAK,UAAYA,EAAG,QAAQ,SAC1C,GA1FI,KAAK,iBAAmBF,EACxB,KAAK,mBAAqBnB,EAC1B,KAAK,WAAa,SAAS,KAAK,cAAc,eAAe,EAC7D,KAAK,WAAW,iBAAiB,QAAS,KAAK,OAAO,EACtD,KAAK,MAAQ,MAAM,KAAK,KAAK,WAAW,iBAAiB,IAAI,CAAC,EAE9D,KAAK,aAAe,SAAS,KAAK,cAAc,gBAAgB,EAChE,KAAK,aAAa,iBAAiB,QAAS,KAAK,WAAW,EAC5D,KAAK,OAAS,UAEd,KAAK,KAAO,CACV,MAAO,SAAS,cAAc,oBAAoB,EAClD,KAAM,SAAS,cAAc,mBAAmB,CACtD,EAEI,KAAK,MAAQL,IAAa,EAAI,GAEzBI,GAEJ,eAAgBK,EAAU,CACzB,MAAMC,EAAS,MAAMC,EAAA,WAAO,sBAAa,8BACzCF,EAAS,WAAaC,EAAO,OAC9B,EAAE,IAAI,CACR,CAiBD,MAAM,OAAOI,EAAO,EAAG,OACrB,GAAI,CACF,MAAMvB,EAAO,MAAMC,EAAW,CAC5B,OAAQ,KAAK,OACb,MAAO,KAAK,MACZ,KAAAsB,CACR,CAAO,EAGD,KAAK,aAAa,UAAYvB,EAAK,QAChC,IAAIgC,EAAO,cAAc,EACzB,KAAK,EAAE,EACV,KAAK,mBAAmB,OAAOhC,EAAK,WAAYA,EAAK,IAAI,EACzD,KAAK,mBAAmB,SAAW,KAAK,4BAExCJ,EAAA,KAAK,aAAL,MAAAA,EAAiB,OAEjB,KAAK,KAAI,CAEV,MAAe,CAEf,CACF,CAED,OAAO,eAAe,CAAE,OAAAwC,EAAQ,KAAAT,EAAM,OAAAN,CAAM,EAAI,CAC9C,MAAO,oEAAoEM,CAAI;AAAA;AAAA,mBAEhES,CAAM;AAAA,wCACeT,CAAI;AAAA;AAAA;AAAA;AAAA,yCAIHzB,EAAsByB,CAAI,CAAC;AAAA,2CACzBN,CAAM;AAAA;AAAA,cAG9C,CAgBD,MAAO,CACL,KAAK,aAAa,UAAU,OAAOX,CAAgB,EACnD,KAAK,aAAa,OAAS,EAC5B,CACD,MAAO,CACL,KAAK,aAAa,UAAU,IAAIA,CAAgB,EAChD,KAAK,aAAa,OAAS,EAC5B,CACH,CCvGA,eAAe2B,GAAkB,CAE/B,MAAMC,GADmB,MAAKlB,EAAA,IAAC,OAAO,0BAAiB,+BACnB,QAE9BP,EAAc,GACdoB,EAAmB,IAAIrB,EAASC,EAAayB,CAAU,EACtC,IAAIN,EAAOnB,EAAaoB,EAAkBK,CAAU,EAC5D,QAAQ,CACrB,OAAQ,SAAS,cAAc,6BAA6B,CAChE,CAAG,CACH,CACAD,EAAiB","names":["backdrop","event","header","body","lastScrollTop","scrollTimeoutId","onScroll","scrollTop","onWheel","api","axios","response","error","serverMessage","_a","iziToast","getExercises","params","data","getFilters","capitalizeFirstLetter","val","findClosestParrent","el","nodeNameFind","nodeNameStop","MOBILE","isMobile","INVISIABLE_CLASS","FILTERS","Exercise","isIndexPage","paginationInstance","__publicField","index","keyword","instance","module","__vitePreload","filter","exercise","page","options","_id","rating","name","burnedCalories","time","bodyPart","target","Filter","exerciseInstance","item","li","imgURL","initMainSection","pagination"],"ignoreList":[],"sources":["../../src/js/menu.js","../../src/js/header-sticky.js","../../src/api.js","../../src/services/apiServices.js","../../src/js/utils.js","../../src/js/main-section/constants.js","../../src/js/main-section/exercise.js","../../src/js/main-section/filter.js","../../src/js/main-section/main-section.js"],"sourcesContent":["const backdrop = document.getElementById('backdrop');\n\nwindow.openMenu = () => {\n  backdrop?.classList.add('is-open');\n};\n\nwindow.closeMenu = () => {\n  backdrop?.classList.remove('is-open');\n};\n\nwindow.menuLayoutClickHandler = (event) => {\n  event.stopPropagation();\n};\n","const header = document.querySelector('.router');\nconst body = document.body;\n\nlet lastScrollTop = 0;\nlet scrollTimeoutId;\n\nconst onScroll = () => {\n  if (!body.hasAttribute('data-user-scrolling')) {\n    return;\n  }\n\n  const scrollTop = document.documentElement.scrollTop;\n\n  header.classList.add('sticky');\n\n  if (scrollTop > 0) {\n    header.classList.toggle('hidden', scrollTop > lastScrollTop);\n  } else {\n    header.classList.remove('sticky');\n  }\n\n  lastScrollTop = scrollTop;\n};\n\nconst onWheel = () => {\n  body.setAttribute('data-user-scrolling', 'true');\n\n  clearTimeout(scrollTimeoutId);\n  scrollTimeoutId = setTimeout(() => {\n    body.removeAttribute('data-user-scrolling');\n  }, 100);\n};\n\nwindow.addEventListener('scroll', onScroll);\ndocument.addEventListener('wheel', onWheel);\n","import axios from 'axios';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst api = axios.create({\n  baseURL: 'https://your-energy.b.goit.study/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response && error.response.status === 409) {\n      const serverMessage = error.response.data?.message || 'Subscription already exists';\n\n      iziToast.error({\n        title: 'Subscription Error',\n        message: serverMessage,\n        position: 'topRight',\n      });\n\n      return { data: null };\n    } else {\n      console.error(error);\n      iziToast.error({\n        title: 'Request Error',\n        message: error?.message,\n        position: \"topRight\"\n      });\n\n      return { data: null };\n    }\n  }\n);\n\nexport default api;\n","import api from '../api.js';\n\n/**\n * @param {Object} params - The query parameters for the request.\n * @param {string} [params.bodypart] - The body part to filter by (e.g., \"back\", \"legs\").\n * @param {string} [params.equipment] - The equipment to filter by (e.g., \"dumbbell\", \"barbell\").\n * @param {number} [params.page=1] - The page number for pagination.\n * @param {number} [params.limit=10] - The number of items per page.\n * @returns {Promise<Object>} A promise that resolves with the list of exercises.\n */\nexport async function getExercises(params) {\n  const { data } = await api.get('/exercises', { params });\n  return data;\n}\n\n/**\n * @param {string|number} id - The identifier of the exercise.\n * @returns {Promise<Object>} A promise that resolves with the exercise details.\n */\nexport async function getExerciseById(id) {\n  const { data } = await api.get(`/exercises/${id}`);\n  return data;\n}\n\n/**\n * @param {string|number} id - The identifier of the exercise to update.\n * @param {Object} ratingData - The rating data object.\n * @param {number} ratingData.rating - The new rating value (e.g., a number from 1 to 5).\n * @returns {Promise<void>} A promise that resolves once the rating has been updated.\n */\nexport async function updateExerciseRating(id, ratingData) {\n  await api.patch(`/exercises/${id}/rating`, ratingData);\n}\n\n/**\n * @param {Object} [params={}] - The filter parameters for the request.\n * @param {string} [params.filter] - The type of filter (e.g., \"body parts\", \"muscles\", \"equipment\").\n * @param {number} [params.page=1] - The page number for pagination.\n * @param {number} [params.limit=12] - The number of items per page.\n * @returns {Promise<Object>} A promise that resolves with the filter data.\n */\nexport async function getFilters(params = {}) {\n  const { data } = await api.get('/filters', { params });\n  return data;\n}\n\n/**\n * @returns {Promise<Object>} A promise that resolves with the quote data.\n * The returned object may contain the following fields:\n * - `quote` {string} - The text of the quote.\n * - `author` {string} - The author of the quote.\n */\nexport async function getQuoteOfTheDay() {\n  const { data } = await api.get('/quote');\n  return data;\n}\n\n/**\n * @param {string} email - The email address of the user who wants to subscribe.\n * @returns {Promise<Object>} A promise that resolves with the server response.\n * The response object may include the following field:\n * - `message` {string} - A message indicating success or that the subscription already exists.\n */\nexport async function subscribe(email) {\n  const { data } = await api.post('/subscription', { email });\n  return data;\n}\n","/**\n *\n * @param {string} val\n * @returns string\n */\nexport function capitalizeFirstLetter(val) {\n  return String(val).charAt(0).toUpperCase() + String(val).slice(1);\n}\n\n/**\n *\n * @param {HTMLElement} el\n * @returns {HTMLElement | null}\n */\nexport function findClosestParrent(\n  el,\n  nodeNameFind = 'LI',\n  nodeNameStop = 'UL'\n) {\n  while (el.nodeName !== nodeNameFind && el.nodeName !== nodeNameStop) {\n    el = el.parentElement;\n  }\n\n  return el.nodeName === nodeNameFind ? el : null;\n}\n\nconst MOBILE = 768;\nconst TABLET = 1152;\n\nexport const isMobile = () => {\n  return window.innerWidth < MOBILE;\n};\n\nexport const isTablet = () => {\n  return !isMobile() && window.innerWidth < TABLET;\n};\n","export const INVISIABLE_CLASS = 'invisiable';\nexport const INDEX_PATH = '/goit-advancedjs-final-project/';\n\nexport const FILTERS = {\n  Muscles: 'muscles',\n  'Body parts': 'bodypart',\n  Equipment: 'equipment',\n};\n","import { getExercises } from '../../services/apiServices';\nimport { isMobile } from '../utils';\nimport { INVISIABLE_CLASS, FILTERS, INDEX_PATH } from './constants';\n\nexport default class Exercise {\n  constructor(isIndexPage, paginationInstance) {\n    this.exerciseyList = document.body.querySelector('.exercise-list');\n    this.limit = isMobile() ? 8 : 10;\n    this.paginationInstance = paginationInstance;\n\n    if (!isIndexPage) return;\n    (async function (instance) {\n      const module = await import('./search.js');\n      instance.searchForm = module.default;\n    })(this);\n  }\n\n  init(filter, exercise) {\n    this.show();\n    this.filter = filter;\n    this.exercise = exercise;\n    this.keyword = '';\n    if (this.searchForm) {\n      this.searchForm.show();\n      this.searchForm.callback = this.searchCallback;\n    }\n    this.render();\n  }\n\n  async render(page = 1) {\n    try {\n      const options = {\n        [FILTERS[this.filter]]: this.exercise,\n        limit: this.limit,\n        page,\n      };\n\n      if (this.keyword) options.keyword = this.keyword;\n      const data = await getExercises(options);\n\n      this.page = page;\n      //   this.currentData = data;\n\n      this.exerciseyList.innerHTML = data.results\n        .map(Exercise.exerciseMarkup)\n        .join('');\n      this.paginationInstance.render(data.totalPages, data.page);\n      this.paginationInstance.callback = this.paginationExerciseCallback;\n      this.show();\n      // console.log(data);\n    } catch (error) {\n      // console.error(error);\n    }\n  }\n\n  static exerciseMarkup({\n    _id,\n    rating,\n    name,\n    burnedCalories,\n    time,\n    bodyPart,\n    target,\n  }) {\n    return `<li class=\"workout-card\" data-id=\"${_id}\">\n          <div class=\"workout-card-container\">\n            <div class=\"workout-header\">\n              <span class=\"workout-badge\">WORKOUT</span>\n              <span class=\"workout-rating-value\">${rating.toFixed(2)}</span>\n              <svg width=\"18\" height=\"18\" class=\"workout-rating-icon\">\n                <use xlink:href=\"../img/icons.svg#icon-Star\"></use>\n              </svg>\n              <a href=\"#\" class=\"workout-start-btn\"\n                >Start\n                <svg width=\"16\" height=\"16\" class=\"workout-start-icon\">\n                  <use xlink:href=\"../img/icons.svg#menu\"></use>\n                </svg>\n              </a>\n            </div>\n            <div class=\"workout-body\">\n              <svg width=\"24\" height=\"24\" class=\"workout-icon\">\n                <use xlink:href=\"../img/icons.svg#icon-running\"></use>\n              </svg>\n              <h3 class=\"workout-title\">${name}</h3>\n            </div>\n            <ul class=\"workout-meta\">\n              <li class=\"workout-meta-item\">\n                Burned calories:\n                <span class=\"workout-meta-value\">${burnedCalories} / ${\n      time || '...'\n    }</span>\n              </li>\n              <li class=\"workout-meta-item\">\n                Body part: <span class=\"workout-meta-value\">${bodyPart}</span>\n              </li>\n              <li class=\"workout-meta-item\">\n                Target: <span class=\"workout-meta-value\">${target}</span>\n              </li>\n            </ul>\n          </div>\n        </li>`;\n  }\n\n  paginationExerciseCallback = index => {\n    this.render(index);\n  };\n\n  searchCallback = keyword => {\n    // if (keyword === this.keyword) return;\n    this.keyword = keyword || '';\n    this.render();\n  };\n\n  show() {\n    this.exerciseyList.classList.remove(INVISIABLE_CLASS);\n    this.exerciseyList.hidden = false;\n  }\n  hide() {\n    this.exerciseyList.classList.add(INVISIABLE_CLASS);\n    this.exerciseyList.hidden = true;\n  }\n}\n","import { getFilters } from '../../services/apiServices';\nimport { capitalizeFirstLetter, findClosestParrent, isMobile } from '../utils';\nimport { INDEX_PATH, INVISIABLE_CLASS } from './constants';\n\nclass Filter {\n  constructor(isIndexPage, exerciseInstance, paginationInstance) {\n    this.exerciseInstance = exerciseInstance;\n    this.paginationInstance = paginationInstance;\n    this.filterList = document.body.querySelector('.filters-list');\n    this.filterList.addEventListener('click', this.onClick);\n    this.items = Array.from(this.filterList.querySelectorAll('li'));\n\n    this.categoryList = document.body.querySelector('.category-list');\n    this.categoryList.addEventListener('click', this.cardOnClick);\n    this.filter = 'Muscles';\n\n    this.path = {\n      start: document.querySelector('.filter-path-start'),\n      part: document.querySelector('.filter-path-part'),\n    };\n\n    this.limit = isMobile() ? 9 : 12;\n\n    if (!isIndexPage) return;\n\n    (async function (instance) {\n      const module = await import('./search.js');\n      instance.searchForm = module.default;\n    })(this);\n  }\n\n  onClick = ({ target }) => {\n    if (target.nodeName !== 'LI') return;\n\n    this.items.forEach(item => item.classList.remove('active'));\n    target.classList.add('active');\n\n    this.filter = target.dataset.filter;\n\n    this.exerciseInstance.hide();\n    this.render();\n\n    this.path.start.innerHTML = 'Exercises';\n    this.path.part.innerHTML = '';\n  };\n\n  async render(page = 1) {\n    try {\n      const data = await getFilters({\n        filter: this.filter,\n        limit: this.limit,\n        page,\n      });\n      //   this.currentData = data;\n\n      this.categoryList.innerHTML = data.results\n        .map(Filter.categoryMarkup)\n        .join('');\n      this.paginationInstance.render(data.totalPages, data.page);\n      this.paginationInstance.callback = this.paginationCategoryCallback;\n\n      this.searchForm?.hide();\n\n      this.show();\n      // console.log(data);\n    } catch (error) {\n      // console.error(error);\n    }\n  }\n\n  static categoryMarkup({ imgURL, name, filter }) {\n    return `<li class=\"category-card\" data-muscle=\"abductors\" data-exercise=\"${name}\">\n          <img\n            src=\"${imgURL}\"\n            alt=\"Image shows exercise ${name}\"\n            class=\"category-card-image\"\n          />\n          <div class=\"category-content\">\n            <h3 class=\"category-title\">${capitalizeFirstLetter(name)}</h3>\n            <p class=\"category-subtitle\">${filter}</p>\n          </div>\n        </li>`;\n  }\n\n  paginationCategoryCallback = index => {\n    this.render(Number(index));\n  };\n\n  cardOnClick = ({ target }) => {\n    const li = findClosestParrent(target, 'LI', 'UL');\n    if (!li) return;\n    this.hide();\n    this.exerciseInstance.init(this.filter, li.dataset.exercise);\n\n    this.path.start.innerHTML = 'Exercises /';\n    this.path.part.innerHTML = li.dataset.exercise;\n  };\n\n  show() {\n    this.categoryList.classList.remove(INVISIABLE_CLASS);\n    this.categoryList.hidden = false;\n  }\n  hide() {\n    this.categoryList.classList.add(INVISIABLE_CLASS);\n    this.categoryList.hidden = true;\n  }\n}\n\nexport default Filter;\n","import Exercise from './exercise';\nimport Filter from './filter';\n\nasync function initMainSection() {\n  const modulePagination = await import('./pagination.js');\n  const pagination = modulePagination.default;\n\n  const isIndexPage = true;\n  const exerciseInstance = new Exercise(isIndexPage, pagination);\n  const filterInstance = new Filter(isIndexPage, exerciseInstance, pagination);\n  filterInstance.onClick({\n    target: document.querySelector('.filters-list .filters-item'),\n  });\n}\ninitMainSection();\n"],"file":"assets/main-DqjUK_3t.js"}